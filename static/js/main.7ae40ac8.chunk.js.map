{"version":3,"sources":["store/goodsSlice.js","components/Goods.js","store/cartSlice.js","containers/GoodsList.js","components/Cart.js","containers/CartList.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["goodsSlice","createSlice","name","initialState","goods","goodsArr","reducers","actions","selectGoods","state","Goods","props","className","src","image","alt","title","cost","articul","cartSlice","value","increment","data","payload","undefined","minus","delet","selectCart","cart","GoodsList","useSelector","dispatch","useDispatch","onClick","event","preventDefault","t","target","classList","contains","getAttribute","map","item","Cart","summ","Object","keys","key","elem","colSpan","align","width","CartList","goodsObj","reduce","accum","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","goodsReducer","cartReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7ae40ac8.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport goodsArr from '../data/goods.json';\r\n\r\nexport const goodsSlice = createSlice({\r\n    name: 'good',\r\n    initialState: {\r\n        goods: goodsArr\r\n    },\r\n    reducers: {\r\n\r\n    }\r\n});\r\n\r\nexport const { } = goodsSlice.actions;\r\n\r\nexport const selectGoods = state => state.goods.goods;\r\n\r\nexport default goodsSlice.reducer;\r\n\r\n\r\n","\r\nfunction Goods(props) {\r\n    return (\r\n        <div className=\"goods-block\">\r\n            <img src={props.image} alt=\"\" />\r\n            <p>{props.title}</p>\r\n            <p>{props.cost}</p>\r\n            <button className=\"add-to-cart\" data-key={props.articul}>Add to cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Goods;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        value: {}\r\n    },\r\n    reducers: {\r\n        increment: (state, data) => {\r\n            // console.log(data);\r\n            let articul = data.payload;\r\n            if (state.value[articul] === undefined) state.value[articul] = 0;\r\n            state.value[articul]++;\r\n        },\r\n        minus: (state, data) => {\r\n            let articul = data.payload;\r\n            if (state.value[articul] > 1) state.value[articul]--\r\n            else delete state.value[articul];\r\n\r\n        },\r\n        delet: (state, data) => {\r\n            let articul = data.payload;\r\n            delete state.value[articul];\r\n\r\n        }\r\n    }\r\n});\r\n\r\nexport const { increment, minus, delet } = cartSlice.actions;\r\n\r\nexport const selectCart = state => state.cart.value;\r\n\r\nexport default cartSlice.reducer;\r\n\r\n\r\n","//получение данных и вывод\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    selectGoods\r\n} from '../store/goodsSlice';\r\n\r\nimport Goods from '../components/Goods'\r\nimport { increment } from '../store/cartSlice';\r\n\r\nfunction GoodsList() {\r\n    const goods = useSelector(selectGoods);\r\n    const dispatch = useDispatch();\r\n\r\n    let clickHandler = (event) => {\r\n        event.preventDefault();\r\n        let t = event.target;\r\n        if (!t.classList.contains('add-to-cart')) return true;\r\n        dispatch(increment(t.getAttribute('data-key')))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"goods-field\" onClick={clickHandler}>\r\n                {goods.map(item => <Goods title={item.title} cost={item.cost} image={item.image} articul={item.articul} key={item.articul} />)}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GoodsList;","\r\nfunction Cart(props) {\r\n    // console.log(props.obj)\r\n    let summ = 0;\r\n\r\n    Object.keys(props.cart).map((item, key) => summ += props.cart[item] * props.elem[item]['cost'], summ)\r\n\r\n    return (\r\n        <>\r\n\r\n            <tbody className=\"cart-table\">\r\n\r\n                <tr><th>Name</th><th>cost</th><th>quant</th><th>summ</th><th>img</th><th colSpan=\"2\">options</th></tr>\r\n\r\n                {Object.keys(props.cart).map(item =>\r\n                    <tr key={item + props.elem[item]['title']}>\r\n                        <td>{props.elem[item]['title']}</td>\r\n                        <td>{props.elem[item]['cost']}</td>\r\n                        <td>{props.cart[item]}</td>\r\n                        <td>{props.cart[item] * props.elem[item]['cost']}</td>\r\n                        <td align=\"center\"><img src={props.elem[item]['image']} width=\"35%\" alt={props.elem[item]['title']} /></td>\r\n                        <td><button className=\"minus\" data-key={props.elem[item]['articul']}>-</button></td>\r\n                        <td><button className=\"delete\" data-key={props.elem[item]['articul']}>del</button></td></tr>)}\r\n                <tr><td colSpan=\"3\">Total cost</td><td>{summ}</td></tr>\r\n            </tbody>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    selectGoods\r\n} from '../store/goodsSlice';\r\n\r\nimport { selectCart, minus, delet } from '../store/cartSlice';\r\nimport Cart from '../components/Cart'\r\n\r\nfunction CartList() {\r\n    const goods = useSelector(selectGoods);\r\n    const cart = useSelector(selectCart);\r\n    const dispatch = useDispatch();\r\n    // reindex items\r\n    const goodsObj = goods.reduce((accum, item) => {\r\n        accum[item['articul']] = item;\r\n        return accum;\r\n    }, {});\r\n\r\n    let clickHandler = (event) => {\r\n        if (event.target.getAttribute('class') === 'minus')\r\n            dispatch(minus(event.target.getAttribute('data-key')));\r\n\r\n        if (event.target.getAttribute('class') === 'delete')\r\n            dispatch(delet(event.target.getAttribute('data-key')));\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Cart</h1>\r\n            <table className=\"cart-table\" onClick={clickHandler}>\r\n\r\n                <Cart elem={goodsObj} cart={cart} />\r\n\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartList;","import GoodsList from \"./containers/GoodsList\";\nimport CartList from './containers/CartList'\n\n\n\nfunction App() {\n  return (\n    <div>\n      <GoodsList />\n      <CartList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport goodsReducer from './goodsSlice'\r\nimport cartReducer from './cartSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        goods: goodsReducer,\r\n        cart: cartReducer\r\n    }\r\n\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}